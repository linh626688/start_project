{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreDisplay","Label","maxStarDuration","minStarDuration","ground","Node","player","onLoad","timer","starDuration","score","groundY","y","height","spawnNewStar","gainScore","string","toString","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","start","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMRC,sBAAc;AACVH,qBAAS,IADC;AAEVC,kBAAMP,GAAGU;AAFC,SANN;AAUR;AACAC,yBAAiB,CAXT;AAYRC,yBAAiB,CAZT;AAaR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL,SAdA;AAkBR;AACAC,gBAAQ;AACJT,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL;AAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCQ,KAHP;;AA2CL;;AAEAE,UA7CK,oBA6CK;;AAEN;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACI,aAAKC,KAAL,GAAa,CAAb;;AAEF;AACA,aAAKC,OAAL,GAAe,KAAKP,MAAL,CAAYQ,CAAZ,GAAgB,KAAKR,MAAL,CAAYS,MAAZ,GAAmB,CAAlD,CARI,CAQmD;AACvD;AACA,aAAKC,YAAL;AACL,KAxDI;;AAyDLC,eAAW,qBAAY;AACnB,aAAKL,KAAL,IAAc,CAAd;AACA;AACA,aAAKV,YAAL,CAAkBgB,MAAlB,GAA2B,YAAY,KAAKN,KAAL,CAAWO,QAAX,EAAvC;AACH,KA7DI;AA8DLH,kBAAc,wBAAW;AACrB;AACA,YAAII,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;AACA;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;;AAEA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA,aAAKhB,YAAL,GAAoB,KAAKN,eAAL,GAAuBZ,GAAGmC,UAAH,MAAmB,KAAKxB,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKK,KAAL,GAAa,CAAb;AACH,KA3EI;AA4ELe,wBAAoB,8BAAY;AAC5B,YAAII,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKjB,OAAL,GAAepB,GAAGmC,UAAH,KAAkB,KAAKpB,MAAL,CAAYkB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQpC,GAAGyC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOvC,GAAG0C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KArFI;;AAuFLM,SAvFK,mBAuFI,CAER,CAzFI;AA2FLC,UA3FK,kBA2FGC,EA3FH,EA2FO;AACR,YAAI,KAAK5B,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAK4B,QAAL;AACA;AACH;AACD,aAAK7B,KAAL,IAAc4B,EAAd;AACH,KAjGI;;AAkGLC,cAAU,oBAAY;AAClB,aAAK/B,MAAL,CAAYgC,cAAZ,GADkB,CACY;AAC9B/C,WAAGgD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AArGI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // this property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // the random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        \n        //initialize timer\n        this.timer = 0;\n        this.starDuration = 0;\n            this.score = 0;\n\n          // obtain the anchor point of ground level on the y axis\n          this.groundY = this.ground.y + this.ground.height/2;   // this.ground.top may also work\n          // generate a new star\n          this.spawnNewStar();\n    },\n    gainScore: function () {\n        this.score += 1;\n        // update the words of the scoreDisplay Label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n    spawnNewStar: function() {\n        // generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n        // put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n        // set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n\n        // A reference to the game object is temporarily stored on the star component\n        newStar.getComponent('Star').game = this;\n\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n    getNewStarPosition: function () {\n        var randX = 0;\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); // stop the jumping action of the player node\n        cc.director.loadScene('game');\n    },\n});\n"]}